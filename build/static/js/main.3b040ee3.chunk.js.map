{"version":3,"sources":["Container/Home.js","recoil/UserDetail.js","Components/Message.js","Container/Chat.js","Components/UserJoin.js","Container/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","textTransform","form","width","submit","Home","props","useState","name","setName","classes","history","useHistory","useEffect","setsocket","io","socket","undefined","localStorage","getItem","push","Container","component","maxWidth","CssBaseline","className","Avatar","length","charAt","Typography","variant","onSubmit","event","preventDefault","user","id","uuidv4","setItem","JSON","stringify","TextField","required","fullWidth","label","autoFocus","value","onChange","target","Button","type","color","userState","atom","key","default","messages","input","useStyle","Wrapper","marginBottom","Wrapper1","message1Arrow","height","borderTop","borderBottom","borderRight","message2Arrow","borderLeft","Message","padding","Message1","User","fontWeight","fontSize","m","Chat","children","Joined","justifyContent","borderRadius","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","position","centerContent","palette","primary","main","general","users","secondary","chat","left","right","bottom","inputFlex","Input","inputIcon","textAlign","SendButton","border","window","useTheme","React","mobileOpen","setMobileOpen","useRecoilState","userDetail","setUserDetail","handleDrawerToggle","parse","emit","userName","on","data","d","console","log","state_data","map","val","old","sendData","msg","message","i","style","join","Divider","List","ListItem","button","ListItemIcon","ListItemText","index","container","document","body","AppBar","Toolbar","IconButton","aria-label","edge","onClick","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","onKeyUp","keyCode","App","setSocket","changeSocket","path","exact","render","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"iWAsBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiB,MACjBC,cAAe,cAEnBC,KAAM,CACFC,MAAO,OACPV,UAAWF,EAAMG,QAAQ,IAG7BU,OAAQ,CACJL,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAsErBW,EAlEF,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,KAEdC,EAAUrB,EAAUiB,GAEpBK,EAAUC,cA0BhB,OAbAC,qBAAU,WACNP,EAAMQ,UAAUC,SACjB,IAEHF,qBAAU,WACe,OAAjBP,EAAMU,aACuCC,IAAzCC,aAAaC,QAAQ,iBAA0E,OAAzCD,aAAaC,QAAQ,kBAC3EV,EAAQS,aAAaC,QAAQ,gBAAgBX,MAC7CG,EAAQS,KAAK,YAGtB,CAACd,EAAMU,SAGN,kBAACK,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWf,EAAQlB,OACpB,kBAACkC,EAAA,EAAD,CAAQD,UAAWf,EAAQZ,QACtBU,EAAKmB,OAAS,EAAInB,EAAKoB,OAAO,GAAK,KAExC,kBAACC,EAAA,EAAD,CAAYP,UAAU,KAAKQ,QAAQ,MAAnC,WAGA,0BAAML,UAAWf,EAAQR,KAAM6B,SAlC1B,SAACC,GAEd,GADAA,EAAMC,iBACe,OAAjB3B,EAAMU,OAAiB,CACvB,IAAMkB,EAAO,GACbA,EAAK1B,KAAOA,EACZ0B,EAAKC,GAAKC,cACVlB,aAAamB,QAAQ,eAAgBC,KAAKC,UAAUL,IACpDvB,EAAQS,KAAK,YA4BL,kBAACoB,EAAA,EAAD,CACIV,QAAQ,WACR/B,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTC,MAAM,aACNnC,KAAK,OACLoC,WAAS,EACTC,MAAOrC,EACPsC,SAAU,SAACd,GAAD,OAAWvB,EAAQuB,EAAMe,OAAOF,UAE9C,kBAACG,EAAA,EAAD,CACIC,KAAK,SACLP,WAAS,EACTZ,QAAQ,YACRoB,MAAM,UACNzB,UAAWf,EAAQN,QALvB,a,oKC7FP+C,EAAYC,YAAK,CAC1BC,IAAK,YACLC,QAAS,CACPC,SAAU,GACVC,MAAO,GACPtB,KAAM,MCJNuB,EAAWnE,aAAW,SAAAC,GAAK,MAAK,CAClCmE,QAAS,CACL/D,QAAS,OACTgE,aAAc,OAElBC,SAAU,CACNjE,QAAS,OACTgE,aAAc,OAElBE,cAAe,CACX1D,MAAO,EACP2D,OAAQ,EACRC,UAAW,wBACXC,aAAc,yBACdC,YAAa,qCAEjBC,cAAe,CACX/D,MAAO,EACP2D,OAAQ,EACRC,UAAW,wBACXC,aAAc,yBACdG,WAAY,qCAEhBC,QAAS,CACLC,QAAS,MACTrE,gBAAiB,0BAErBsE,SAAU,CACND,QAAS,MACTrE,gBAAiB,0BAErBuE,KAAM,CACFC,WAAY,MACZC,SAAU,YAoCHL,EAhCC,SAAC9D,GACb,IAAMI,EAAU+C,EAASnD,GAErBoE,EAAI,yBAAKjD,UAAWf,EAAQgD,SAC5B,yBAAKjC,UAAWf,EAAQmD,gBACxB,yBAAKpC,UAAWf,EAAQ0D,SACpB,yBAAK3C,UAAWf,EAAQ6D,MACnBjE,EAAME,MAEX,yBAAKiB,UAAWf,EAAQiE,MACnBrE,EAAMsE,YAmBnB,OAdGtE,EAAM4B,OACTwC,EAAI,yBAAKjD,UAAWf,EAAQkD,UACxB,yBAAKnC,UAAWf,EAAQ4D,UACpB,yBAAK7C,UAAWf,EAAQ6D,MACnBjE,EAAME,MAEX,yBAAKiB,UAAWf,EAAQiE,MACnBrE,EAAMsE,WAGf,yBAAKnD,UAAWf,EAAQwD,kBAIrBQ,GCvCLrF,GC3BWC,aAAW,SAAAC,GAAK,MAAK,CAClCsF,OAAQ,CACJlF,QAAS,OACTmF,eAAgB,UAEpBP,KAAM,CACFF,QAAS,WACTU,aAAc,OACd/E,gBAAiB,6BACjB2D,aAAc,WDkBJrE,aAAW,SAACC,GAAD,MAAY,CACrCyF,KAAM,CACFrF,QAAS,OACTmE,OAAQ,QAEZmB,OAAO,eACF1F,EAAM2F,YAAYC,GAAG,MAAQ,CAC1BhF,MATQ,IAURiF,WAAY,IAGpBC,OAAO,eACF9F,EAAM2F,YAAYC,GAAG,MAAQ,CAC1BhF,MAAM,eAAD,OAfG,IAeH,OACLmF,WAhBQ,MAmBhBC,WAAW,aACPC,YAAajG,EAAMG,QAAQ,IAC1BH,EAAM2F,YAAYC,GAAG,MAAQ,CAC1BxF,QAAS,SAIjB8F,QAASlG,EAAMmG,OAAOD,QACtBE,YAAa,CACTxF,MA5BY,KA8BhByF,QAAS,CACLC,SAAU,EACVC,SAAU,YAEdC,cAAe,CACXpG,QAAS,OACTmF,eAAgB,SAChBjF,WAAY,SACZqD,MAAO3D,EAAMyG,QAAQC,QAAQC,MAEjCC,QAAS,CACLnG,gBAAiB,UAErBoG,MAAO,CACHpG,gBAAiBT,EAAMyG,QAAQK,UAAUH,KACzCjG,cAAe,cAEnBqG,KAAM,CACFR,SAAU,WACVS,KAAM,EACNC,MAAO,EACPC,OAAQ,MACR3C,OAAQ,OACRO,QAAS,UAEbqC,UAAW,CACP/G,QAAS,OACTmE,OAAQ,OACRgB,eAAgB,iBAEpB6B,MAAO,CACHxG,MAAO,oBACPkE,QAAS,WACTrE,gBAAiB,mBACjB+E,aAAc,QAElB6B,UAAW,CACPzG,MAAO,OACP0G,UAAW,SACXxC,QAAS,OAGbyC,WAAY,CACRhD,OAAQ,OACR9D,gBAAiBT,EAAMyG,QAAQC,QAAQC,KACvCa,OAAQ,OACRhC,aAAc,MACdV,QAAS,MACTlE,MAAO,QAEXiE,QAAS,CACLC,QAAS,wBA+LFM,MA3Lf,SAAcrE,GAAQ,IACV0G,EAAW1G,EAAX0G,OACFtG,EAAUrB,IACVE,EAAQ0H,cAHG,EAImBC,IAAM3G,UAAS,GAJlC,mBAIV4G,EAJU,KAIEC,EAJF,OAKmBC,YAAelE,GALlC,mBAKVmE,EALU,KAKEC,EALF,KAOX5G,EAAUC,cAEV4G,EAAqB,WACvBJ,GAAeD,IAGnBtG,qBAAU,WACN,GAAoB,MAAhBP,EAAMU,aAA4DC,IAAzCC,aAAaC,QAAQ,iBAA0E,OAAzCD,aAAaC,QAAQ,gBACpGR,EAAQS,KAAK,SADjB,CAIA,IAAMc,EAAOI,KAAKmF,MAAMvG,aAAaC,QAAQ,iBAC7Cb,EAAMU,OAAO0G,KAAK,YAAa,CAC3BC,SAAUzF,EAAK1B,KACf2B,GAAID,EAAKC,KAEb7B,EAAMU,OAAO4G,GAAG,aAAa,SAAUC,GACnC,IAAM3F,EAAOI,KAAKmF,MAAMvG,aAAaC,QAAQ,iBACvCgB,EAAKD,EAAKC,GACV2F,EAAID,EAAKzB,MACf2B,QAAQC,IAAI9F,EAAMC,EAAI0F,EAAMC,GAC5B,IAAMG,EAAa,CAAC/F,GACpB4F,EAAEI,KAAI,SAAAC,GACEA,EAAIhG,KAAOA,GACX8F,EAAW7G,KAAK+G,MAExBJ,QAAQC,IAAI,SAAUC,GACtBV,GAAc,SAAAa,GAAG,kCACVA,GADU,IAEblG,KAAM+F,UAId3H,EAAMU,OAAO4G,GAAG,eAAe,SAAUC,GACrCE,QAAQC,IAAI,eAAgBH,MAGhCvH,EAAMU,OAAO4G,GAAG,cAAc,SAAUC,GACpCN,GAAc,SAAAa,GACV,IAAMN,EAAC,YAAOM,EAAI7E,UAElB,OADAuE,EAAE1G,KAAKyG,GACA,2BACAO,GADP,IAEI7E,SAAUuE,aAIvB,CAACxH,EAAMU,SAEV,IAOMqH,EAAW,WACb,GAAyB,KAArBf,EAAW9D,MAAc,CACzBlD,EAAMU,OAAO0G,KAAK,UAAW,CACzBY,IAAKhB,EAAW9D,MAChBhD,KAAM8B,KAAKmF,MAAMvG,aAAaC,QAAQ,iBAAiBX,OAE3D,IAAMsH,EAAC,YAAOR,EAAW/D,UACzBuE,EAAE1G,KAAK,CACHZ,KAAM,MACN8H,IAAKhB,EAAW9D,QAEpB+D,GAAc,SAAAa,GAAG,kCACVA,GADU,IAEb5E,MAAO,GACPD,SAAUuE,SAKhBS,EAAUjB,EAAW/D,SAAS2E,KAAI,SAACC,EAAKK,GAC1C,MAAiB,QAAbL,EAAI3H,KACG,yBAAK6C,IAAKmF,EAAGC,MAAO,CAAE9I,QAAS,OAAQQ,MAAO,OAAQ2E,eAAgB,aAAc,kBAAC,EAAD,CAAS5C,MAAI,EAAC1B,KAAK,OAAQ2H,EAAIG,MAEnH,kBAAC,EAAD,CAASjF,IAAKmF,EAAGhI,KAAM2H,EAAI3H,MAAQ2H,EAAIG,QAGhDrD,EACF,6BACI,yBAAKxD,UAAW,CAACf,EAAQqF,cAAerF,EAAQ+E,SAASiD,KAAK,MAC1D,kBAAC7G,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAU,MAAnC,gBAEJ,kBAACqH,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KAAc,kBAACrH,EAAA,EAAD,CAAQD,UAAWf,EAAQyF,SAA3B,MACd,kBAAC6C,EAAA,EAAD,CAAc/C,QAAO,cAG7B,kBAAC0C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACKtB,EAAWpF,KAAKgG,KAAI,SAAChG,EAAM+G,GAAP,OACjB,kBAACJ,EAAA,EAAD,CAAUC,QAAM,EAACzF,IAAKnB,GAClB,kBAAC6G,EAAA,EAAD,KAAc,kBAACrH,EAAA,EAAD,CAAQD,UAAWf,EAAQ0F,OAAQlE,EAAK1B,KAAKoB,OAAO,KAClE,kBAACoH,EAAA,EAAD,CAAc/C,QAAS/D,EAAK1B,aAO1C0I,OAAuBjI,IAAX+F,EAAuB,kBAAMA,IAASmC,SAASC,WAAOnI,EAExE,OACI,yBAAKQ,UAAWf,EAAQsE,MACpB,kBAACxD,EAAA,EAAD,MACA,kBAAC6H,EAAA,EAAD,CAAQvD,SAAS,QAAQrE,UAAWf,EAAQ2E,QACxC,kBAACiE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIrG,MAAM,UACNsG,aAAW,cACXC,KAAK,QACLC,QAASlC,EACT/F,UAAWf,EAAQ6E,YAEnB,kBAAC,IAAD,OAEJ,kBAAC1D,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,QAAM,GAA/B,aAKR,yBAAKlI,UAAWf,EAAQuE,OAAQuE,aAAW,mBACvC,kBAACI,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxB,kBAACC,EAAA,EAAD,CACIb,UAAWA,EACXpH,QAAQ,YACRkI,OAA4B,QAApBzK,EAAM0K,UAAsB,QAAU,OAC9CC,KAAM/C,EACNgD,QAAS3C,EACT9G,QAAS,CACLlB,MAAOkB,EAAQiF,aAEnByE,WAAY,CACRC,aAAa,IAGhBpF,IAGT,kBAAC2E,EAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACIrJ,QAAS,CACLlB,MAAOkB,EAAQiF,aAEnB7D,QAAQ,YACRoI,MAAI,GAEHjF,KAIb,0BAAMxD,UAAWf,EAAQkF,SACrB,yBAAKnE,UAAWf,EAAQ+E,UACxB,yBAAKhE,UAAWf,EAAQ0D,SACnBmE,GAGL,yBAAK9G,UAAWf,EAAQ4F,MACpB,yBAAK7E,UAAWf,EAAQgG,WACpB,yBAAKjF,UAAWf,EAAQiG,OACpB,kBAACnE,EAAA,EAAD,CAAWS,KAAK,OAAOP,WAAS,EAAC+F,MAAO,CAAEpE,QAAS,QAAUvB,SAAU,SAACd,GAAD,OAAWuF,GAAc,SAAAa,GAAG,kCAAUA,GAAV,IAAe5E,MAAOxB,EAAMe,OAAOF,YAAWA,MAAOyE,EAAW9D,MAAO+G,QArH/K,SAACvI,GACK,IAAjBA,EAAMwI,SAENnC,QAoHY,4BAAQ5G,UAAWf,EAAQoG,WAAY4C,QAASrB,GAAU,kBAAC,IAAD,CAAUI,MAAO,CAAEvF,MAAO,iBEpQ7FuH,MAjBf,WAAgB,IAAD,EACelK,mBAAS,MADxB,mBACNS,EADM,KACE0J,EADF,KAGPC,EAAe,SAAC9H,GACpB6H,EAAU7H,IAGZ,OACE,yBAAKpB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmJ,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAM9J,OAAQA,EAAQF,UAAW6J,OACrE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAM9J,OAAQA,UCX1C+J,QACW,cAA7B/D,OAAOgE,SAASC,UAEe,UAA7BjE,OAAOgE,SAASC,UAEhBjE,OAAOgE,SAASC,SAASC,MACvB,2DCTNC,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINjC,SAASkC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9D,QAAQ8D,MAAMA,EAAMtD,c","file":"static/js/main.3b040ee3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useHistory } from 'react-router'\nimport io from 'socket.io-client'\n\n\nimport {v4 as uuidv4} from 'uuid'\n\n\n\n\nimport Container from '@material-ui/core/Container'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: 'red',\n        textTransform: 'capitalize'\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1)\n    },\n\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nconst Home = (props) => {\n    const [name, setName] = useState(\"\")\n    const classes = useStyles(props)\n\n    const history = useHistory()\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        if (props.socket !== null) {\n            const user = {}\n            user.name = name\n            user.id = uuidv4()\n            localStorage.setItem('p-react-chat', JSON.stringify(user))\n            history.push('/chat')\n        }\n    }\n\n    useEffect(() => {\n        props.setsocket(io())\n    }, [])\n\n    useEffect(() => {\n        if (props.socket !== null) {\n            if (localStorage.getItem('p-react-chat') !== undefined && localStorage.getItem('p-react-chat') !== null) {\n                setName(localStorage.getItem('p-react-chat').name)\n                history.push('/chat')\n            }\n        }\n    }, [props.socket])\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    {name.length > 0 ? name.charAt(0) : '?'}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Enter Name\"\n                        name=\"name\"\n                        autoFocus\n                        value={name}\n                        onChange={(event) => setName(event.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >Login</Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\n\nexport default Home;","\nimport { atom } from 'recoil'\n\nexport const userState = atom({\n    key: 'userState',\n    default: {\n      messages: [],\n      input: \"\",\n      user: []\n    }\n  })\n  ","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyle = makeStyles(theme => ({\n    Wrapper: {\n        display: 'flex',\n        marginBottom: '8px'\n    },\n    Wrapper1: {\n        display: 'flex',\n        marginBottom: '8px'\n    },\n    message1Arrow: {\n        width: 0,\n        height: 0,\n        borderTop: '0px solid transparent',\n        borderBottom: '10px solid transparent',\n        borderRight: '10px solid rgba(0, 0, 255, 0.103)'\n    },\n    message2Arrow: {\n        width: 0,\n        height: 0,\n        borderTop: '0px solid transparent',\n        borderBottom: '10px solid transparent',\n        borderLeft: '10px solid rgba(0, 128, 0, 0.137)'\n    },\n    Message: {\n        padding: '5px',\n        backgroundColor: 'rgba(0, 0, 255, 0.103)'\n    },\n    Message1: {\n        padding: '5px',\n        backgroundColor: 'rgba(0, 128, 0, 0.137)'\n    },\n    User: {\n        fontWeight: '500',\n        fontSize: '16px'\n    }\n}))\n\nconst Message = (props) => {\n    const classes = useStyle(props)\n\n    let m = <div className={classes.Wrapper}>\n        <div className={classes.message1Arrow}></div>\n        <div className={classes.Message}>\n            <div className={classes.User}>\n                {props.name}\n            </div>\n            <div className={classes.Chat}>\n                {props.children}\n            </div>\n        </div>\n    </div>\n\n    if(props.user)\n    m = <div className={classes.Wrapper1}>\n        <div className={classes.Message1}>\n            <div className={classes.User}>\n                {props.name}\n            </div>\n            <div className={classes.Chat}>\n                {props.children}\n            </div>\n        </div>\n        <div className={classes.message2Arrow}></div>\n    </div>\n\n\n    return m;\n}\n\nexport default Message;","import React, { useEffect } from 'react';\n\nimport { useHistory } from 'react-router'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\n\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { userState } from '../recoil/UserDetail'\nimport { useRecoilState, useResetRecoilState } from 'recoil'\n\nimport Message from '../Components/Message'\nimport UserJoin from '../Components/UserJoin'\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: '100%'\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        position: \"relative\"\n    },\n    centerContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: theme.palette.primary.main\n    },\n    general: {\n        backgroundColor: 'purple'\n    },\n    users: {\n        backgroundColor: theme.palette.secondary.main,\n        textTransform: 'capitalize'\n    },\n    chat: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: '5px',\n        height: '50px',\n        padding: '0 15px'\n    },\n    inputFlex: {\n        display: 'flex',\n        height: '100%',\n        justifyContent: 'space-between'\n    },\n    Input: {\n        width: 'calc(100% - 60px)',\n        padding: '0 12.5px',\n        backgroundColor: 'rgb(230 230 230)',\n        borderRadius: '25px'\n    },\n    inputIcon: {\n        width: '35px',\n        textAlign: 'center',\n        padding: '5px'\n\n    },\n    SendButton: {\n        height: '100%',\n        backgroundColor: theme.palette.primary.main,\n        border: 'none',\n        borderRadius: '50%',\n        padding: '7px',\n        width: '50px'\n    },\n    Message: {\n        padding: '0 15px 5px 15px'\n    }\n}));\n\nfunction Chat(props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const [userDetail, setUserDetail] = useRecoilState(userState)\n\n    const history = useHistory()\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    useEffect(() => {\n        if (props.socket == null || (localStorage.getItem('p-react-chat') === undefined && localStorage.getItem('p-react-chat') === null)) {\n            history.push('/')\n            return\n        }\n        const user = JSON.parse(localStorage.getItem('p-react-chat'))\n        props.socket.emit('user_join', {\n            userName: user.name,\n            id: user.id\n        })\n        props.socket.on('user_join', function (data) {\n            const user = JSON.parse(localStorage.getItem('p-react-chat'))\n            const id = user.id\n            const d = data.users\n            console.log(user, id, data, d)\n            const state_data = [user]\n            d.map(val => {\n                if (val.id !== id)\n                    state_data.push(val)\n            })\n            console.log(\"USERS \", state_data)\n            setUserDetail(old => ({\n                ...old,\n                user: state_data\n            }))\n        })\n\n        props.socket.on('user_joined', function (data) {\n            console.log(\"User joined \", data)\n        })\n\n        props.socket.on('on_message', function (data) {\n            setUserDetail(old => {\n                const d = [...old.messages]\n                d.push(data)\n                return {\n                    ...old,\n                    messages: d\n                }\n            })\n        })\n    }, [props.socket])\n\n    const keyupEvent = (event) => {\n        if (event.keyCode == 13) {\n            // Send value\n            sendData()\n        }\n    }\n\n    const sendData = () => {\n        if (userDetail.input !== \"\") {\n            props.socket.emit('message', {\n                msg: userDetail.input,\n                name: JSON.parse(localStorage.getItem('p-react-chat')).name\n            })\n            const d = [...userDetail.messages]\n            d.push({\n                name: \"You\",\n                msg: userDetail.input\n            })\n            setUserDetail(old => ({\n                ...old,\n                input: \"\",\n                messages: d\n            }))\n        }\n    }\n\n    const message = userDetail.messages.map((val, i) => {\n        if (val.name === \"You\")\n            return <div key={i} style={{ display: \"flex\", width: '100%', justifyContent: \"flex-end\" }}><Message user name='You' >{val.msg}</Message></div>\n        else\n            return <Message key={i} name={val.name} >{val.msg}</Message>\n    })\n\n    const drawer = (\n        <div>\n            <div className={[classes.centerContent, classes.toolbar].join(\" \")} >\n                <Typography variant=\"h5\" component=\"h5\"> React Chat</Typography>\n            </div>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <ListItemIcon><Avatar className={classes.general}>G</Avatar></ListItemIcon>\n                    <ListItemText primary={`General`} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {userDetail.user.map((user, index) => (\n                    <ListItem button key={user}>\n                        <ListItemIcon><Avatar className={classes.users}>{user.name.charAt(0)}</Avatar></ListItemIcon>\n                        <ListItemText primary={user.name} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        General\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true,\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <div className={classes.Message}>\n                    {message}\n                </div>\n\n                <div className={classes.chat}>\n                    <div className={classes.inputFlex}>\n                        <div className={classes.Input}>\n                            <TextField type=\"text\" fullWidth style={{ padding: '10px' }} onChange={(event) => setUserDetail(old => ({ ...old, input: event.target.value }))} value={userDetail.input} onKeyUp={keyupEvent} />\n                        </div>\n                        <button className={classes.SendButton} onClick={sendData}><SendIcon style={{ color: 'white' }} /></button>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nChat.propTypes = {\n    window: PropTypes.func,\n};\n\nexport default Chat;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyle = makeStyles(theme => ({\n    Joined: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    User: {\n        padding: '7px 15px',\n        borderRadius: '15px',\n        backgroundColor: 'rgba(128, 128, 128, 0.116)',\n        marginBottom: '8px'\n    }\n}))\n\nconst UserJoin = (props) => {\n    const classes = useStyle(props)\n    return (\n        <div className={classes.Joined}>\n            <div className={classes.User}>\n                <span style={{ fontWeight: '500'}}>Prince</span> joined\n            </div>\n        </div>\n    );\n}\n\nexport default UserJoin;","import React, { useState } from 'react';\nimport Home from './Home'\nimport Chat from './Chat'\nimport { Switch, Route } from 'react-router'\n\n\nimport { atom } from 'recoil'\n\n\n\n\n\nfunction App() {\n  const [socket, setSocket] = useState(null)\n\n  const changeSocket = (value) => {\n    setSocket(value)\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact render={() => <Home socket={socket} setsocket={changeSocket} />} />\n        <Route path=\"/chat\" exact render={() => <Chat socket={socket} />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './Container/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { RecoilRoot } from 'recoil'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <RecoilRoot>\n        <App />\n      </RecoilRoot>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}